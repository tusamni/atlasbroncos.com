---
import { imageConfig } from "@/config";
import { getEntry } from "astro:content";

export interface Props {
	src: string;
	gallery?: boolean;
	pictureClass?: string;
	rounded: boolean;
	lazy?: boolean;
}
const { src, gallery = true, pictureClass, rounded = true, lazy = true, ...attrs } = Astro.props;

// image details
const imageName = src.replace("https://cdn.cosmicjs.com/", "");
//const imageNameWithoutExtension = imageName.replace(/\.[^/.]+$/, "");

const imageMetadata = await getEntry("media", imageName);

// loop through all the necessary image widths
const imageOptimized = [];
for (let size of imageConfig.imageSizes) {
	imageOptimized.push(`${imageMetadata.data.imgix_url}?w=${size}&auto=format ${size}w`);
}

const imageSrcSet = imageOptimized.join(", ");
---

<div class:list={[pictureClass, gallery && "gallery hover:cursor-pointer !overflow-hidden relative group w-full h-full", rounded && "rounded-xl"]}>
	{
		imageMetadata ? (
			<img
				srcset={imageSrcSet}
				src={`${imageMetadata.data.imgix_url}?auto=format`}
				alt={imageMetadata.data.alt}
				width={imageMetadata.data.width}
				height={imageMetadata.data.height}
				data-img={imageSrcSet}
				data-width={imageMetadata.data.width}
				data-height={imageMetadata.data.height}
				data-caption={imageMetadata.data.alt}
				{...attrs}
				loading={lazy ? "lazy" : "eager"}
			/>
		) : (
			<img src={`${imageMetadata.data.imgix_url}?auto=format`} srcset={imageSrcSet} loading={lazy ? "lazy" : "eager"} {...attrs} />
		)
	}

	{
		gallery && (
			<div class:list={["z-10 absolute bottom-3 right-3 rounded-full size-7 bg-white flex justify-center items-center pointer-events-none group-hover:size-8 duration-300 transition-all"]}>
				<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="size-4 fill-gray-700">
					<path d="M10.75 4.75a.75.75 0 0 0-1.5 0v4.5h-4.5a.75.75 0 0 0 0 1.5h4.5v4.5a.75.75 0 0 0 1.5 0v-4.5h4.5a.75.75 0 0 0 0-1.5h-4.5v-4.5Z" />
				</svg>
			</div>
		)
	}
</div>
